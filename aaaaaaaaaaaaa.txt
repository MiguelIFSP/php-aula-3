Conversa com o Gemini
Table of Contents

1. Hello World

1.1. Funcionamento

1.2. Código embutido

2. Variáveis

2.1. Exercício

3. Recebendo dados

3.1. Exercício

3.2. Método POST

3.3. Exercício

3.4. Segurança

4. Operadores em PHP

4.1. Aritmética em PHP

5. Exercícios

6. Envio

1. Hello World

As tags <?php e ?> delimitam o código PHP dentro de um arquivo HTML. O que está dentro delas é interpretado pelo PHP.



A função echo envia uma ou mais strings para a saída.



Salve o arquivo abaixo como ola.php na pasta raiz do servidor:



<?php

echo "Olá, mundo!";

?>

1.1. Funcionamento

Você acessa o arquivo ola.php no navegador (localhost/ola.php).

O servidor web busca o arquivo, detecta a extensão e envia o arquivo para o interpretador PHP.

O PHP processa o código e gera o HTML correspondente.

O servidor envia o código gerado para o navegador

O navegador exibe o código na tela.

1.2. Código embutido

<!DOCTYPE html>

<html>

  <head>

      <title>Minha primeira página PHP</title>

  </head>

  <body>

      <?php

  echo "Olá, mundo!";

      ?>

  </body>

</html>

A página deve ser salva com extensão .php exemplo: primeira.php



O funcionamento é o mesmo, mas o interpretador PHP não analisa código HTML.



2. Variáveis

Toda variável em PHP inicia com $.



<?php

  $idade = 21;

  echo $idade;

?>

Podemos concatenar texto e variáveis com .:



<?php

  $idade = 21;

  echo "A idade é: " . $idade;

?>

Variáveis podem ser interpoladas em Strings com aspas duplas:



<?php

  $idade = 21;

  echo "A idade é: $idade";

?>

2.1. Exercício

Crie uma página PHP que calcule a área de uma pizza de 12cm de raio. Pesquise em php.net uma função PHP que retorna o valor de pi, use essa função na página. Nome do arquivo: exer1.php

3. Recebendo dados

Para receber dados em PHP usamos formulários HTML, a página abaixo envia o nome digitado pelo usuário para a página processa_nome.php:



<!DOCTYPE html>

<html>

<head>

    <title>Formulário de Boas-vindas</title>

</head>

<body>

    <form action="processa_nome.php">

<label for="n">Digite seu nome:</label>

<input type="text" id="n" name="nome">

<input type="submit" value="Enviar">

    </form>

</body>

</html>

Os valores enviados ao PHP ficam armazenados no vetor associativo $_GET. Para imprimir uma mensagem com o nome enviado podemos salvar o código abaixo na página processa_nome.php:



<?php

// Recebe o nome enviado pelo formulário

$nome = $_GET['nome'];



// Exibe a mensagem de boas-vindas

echo "<h1>Olá, $nome!</h1>";

?>  

3.1. Exercício

Crie uma página PHP que recebe o raio de uma pizza e calcule a área da pizza. Continue usando pi(). Nome do arquivo: exer2.php

3.2. Método POST

O envio dos dados do formulário por padrão é feito com o método GET:



<form action="processa_nome.php">

Ou assim:



<form action="processa_nome.php" method="get">

Nesse caso, os dados aparecem na linha de endereço do navegador.



Para enviar os dados no corpo da requisição e não na linha de endereço usamos o método POST:



<form action="processa_nome.php" method="post">

Agora os dados chegarão no vetor $_POST e não no vetor $_GET. Eles não aparecem na URL da página.



3.3. Exercício

Ajuste a página PHP que recebe o raio de uma pizza e calcula a área da pizza para usar o método post no formulário de envio. Nome do arquivo: exer3.php

3.4. Segurança

Para evitar ataques XSS, onde um usuário mal-intencionado injeta códigos JavaScript em um campo texto usamos a função filter_var assim:



$nome = filter_var($_POST['nome'], FILTER_SANITIZE_STRING);

Como filter_var retorna false se houver falha no filtro, precisamos usar empty para verificar se a variável $nome ficou vazia, o código completo fica assim:



<?php

if (isset($_POST['nome'])) {

    $nome = filter_var($_POST['nome'], FILTER_SANITIZE_STRING);

    if (!empty($nome)) {

echo "<h1>Olá, $nome!</h1>";

    } else {

echo "Por favor, digite seu nome.";

    }

} else {

    echo "Erro ao enviar os dados.";

}

?>

4. Operadores em PHP

4.1. Aritmética em PHP

Os operadores aritméticos em PHP são:



Operador Nome O que faz

+ Adição Soma: $a + $b

- Subtração Diferença: $a - $b

* Multiplicação Produto: $a * $b

/ Divisão Divide: $a / $b

% Módulo Resto da divisão: $a % $b

** Exponenciação Potência: $a ** $b

5. Exercícios

Crie uma página PHP que recebe dois números A e B e mostra a soma dos dois números. Nome do arquivo: exer4.php

Crie uma página PHP que recebe dois números A e B o resultado da divisão dos dois números. Nome do arquivo: exer5.php

Crie uma página PHP que recebe, o Capital investido, a Taxa de juro e o Tempo. E calcula e exibe o valor do juro simples usando a fórmula Juros = Capital * taxa * tempo. Nome do arquivo: exer6.php

6. Envio

https://forms.gle/vPhS8pguRF7Dv7qm7



Table of Contents

1. Operadores em PHP

1.1. Aritmética em PHP

1.2. Praticando

1.3. error_reporting

1.4. Praticando

1.5. Bootstrap

1.6. Comparação em PHP

1.7. Exercício

1.8. Teste PHP resultado HTML

1.9. while

1.10. Praticando

1.11. Exercício

1.12. Include

1.13. Exercício

1.14. Envio dos exercícios

1. Operadores em PHP

1.1. Aritmética em PHP

Os operadores aritméticos em PHP são:



Operador Nome O que faz

+ Adição Soma: $a + $b

- Subtração Diferença: $a - $b

* Multiplicação Produto: $a * $b

/ Divisão Divide: $a / $b

% Módulo Resto da divisão: $a % $b

** Exponenciação Potência: $a ** $b

<?php



  $x = 2;

  $y = 5;



  echo "Soma: " . $x + $y;



?>

1.2. Praticando

A. Cole o código anterior na parte do código PHP em https://onecompiler.com/php/ e aperte RUN.





B. Mostre o resultado de todas as operações listadas na tabela de operadores do PHP com o código abaixo, substituindo OPERADOR pelo item correto:



<?php



  $x = 2;

  $y = 5;



  echo "Soma: " . $x + $y;



  $x = 3;

  $y = 1;



  // echo "<br>Subtração: " . $x OPERADOR $y;



  $x = 3;

  $y = 5;



  // echo "<br>Multiplicação: " . $x OPERADOR $y;



  $x = 9;

  $y = 2;



  // echo "<br>Divisão: " . $x OPERADOR $y;



  $x = 9;

  $y = 2;



  // echo "<br>Módulo (resto da divisão): " . $x OPERADOR $y;



  $x = 2;

  $y = 5;



  // echo "<br>Exponenciação: " . $x OPERADOR $y;

?>

1.3. error_reporting

Podemos definir quais erros serão mostrados pelo interpretador PHP usando a função error_reporting.



Os parâmetros podem ser valores ou constantes definidas em https://www.php.net/manual/pt_BR/errorfunc.constants.php



<?php

  error_reporting(0);



  $x = 2;

  $y = 5;



  echo "Divisão: " . $x / $y;

?>

1.4. Praticando

C. Acesse a documentação dos operadores aritméticos em PHP e veja como mostrar também o resultado da divisão inteira na página da prática B.





1.5. Bootstrap

Podemos usar PHP em uma página HTML com Bootstrap:



<!doctype html>

<html lang="en">

  <head>

    <meta charset="utf-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Bootstrap demo</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">

  </head>

  <body>



    <?php

        echo '<h1>Olá PHP!</h1>';

    ?>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>

  </body>

  </body>

</html>



1.6. Comparação em PHP

Operador Nome O que faz

> Maior que Verifica se $a é maior que $b: $a > $b

< Menor que Verifica se $a é menor que $b: $a > $b

>= Maior que ou igual a Verifica se $a é maior que ou igual a $b: $a >= $b

<= Menor que ou igual a Verifica se $a é menor que ou igual a $b: $a <= $b

== Igual a Verifica se $a é igual a $b: $a == $b

!= Diferente Verifica se $a é diferente de $b: $a != $b

<> Diferente Verifica se $a é diferente de $b: $a <> $b

=== Idêntico Verifica se $a é igual e tem o mesmo tipo de $b: $a===$b

!== Não idêntico Verifica se $a não é idêntico a $b e não tem o mesmo tipo: $a !== $b

<=> Espaçonave Verifica se $a é menor que $b, se é igual a ou se é maior: $a <=> $b

1.7. Exercício

Crie uma página PHP que recebe dois números e mostra todas as informações de comparação da tabela anterior. Arquivo exer4.php. Exemplo:

$x = 22  // Use $_GET['num1']

$y = 7   // Use $_GET['num2']



if($x > $y) {

  echo "$x é maior que $y";

}



if($y > $x) {

  echo "$y é maior que $x";

}

1.8. Teste PHP resultado HTML

O PHP oferece uma sintaxe alternativa para as estruturas de controle:



<?php

if ($x > $y) {

  echo "<strong>Maior!</strong>";

}

?>

Pode ser escrita assim:



<?php

if ($x > $y):

  echo "<strong>Maior!</strong>";

endif;

?>  

Ou ainda assim:



<?php if ($x > $y): ?>

<strong>Maior!</strong>

<?php endif; ?>

Existem sintaxes alternativas para if, while, for, foreach e switch.



1.9. while

A sintaxe:



<?php

$numero = 1;



while($numero <= 5) {

  echo $numero++ . "<br>";

}

?>

Pode ser simplificado:



<?php

$numero = 1;

while ($numero <= 5):

    echo $numero++ . "<br>";

endwhile;

?>

1.10. Praticando

Altere o código abaixo para imprimir todos os quadrados dos número de 1 a 10:



 <!DOCTYPE html>

 <html>

   <head>

     <title>Quadrados</title>

   </head>

   <body>

     <table>

       <tr>

         <th>Número</th>

         <th>Quadrado</th>

       </tr>

       <?php

$numero = 2;

if ($numero > 0):

    $quadrado = $numero * $numero; ?>

       <tr>

         <td><?= $numero ?></td>

         <td><?= $quadrado ?></td>

       </tr>

       <?php

endif;

?>

     </table>

   </body>

 </html>

1.11. Exercício

Arquivo exer5.php. Usando a fórmula do juros simples e montante, escreva uma página PHP que recebe o capital, a taxa de juro e o tempo. Mostre uma tabela que mostra o montante, o juro e o tempo (de 1 até o tempo determinado), exemplo:

Capital: 600

Taxa: 12%

Tempo: 5

Tempo Montante Juro

0 600 0

1 672 72

2 744 144

3 816 216

4 888 288

5 960 360

1.12. Include

Podemos usar include para incluir um código PHP em outra página PHP.



Exemplo: codigo1.php



<?php



$x = 27;



?>

Código2.php:



<?php



echo $x;



?>

Se continuar assim, ao executar codigo2.php teremos: Undefined variable: x. Mas se incluirmos codigo1.php em codigo2.php a variável fica definida:



<?php

include('codigo1.php');



echo $x;



?>

1.13. Exercício

Crie a página atual.php contendo o código abaixo:

<?php

  $pg_atual = 'produtos';

?>

Crie a página menu.php contendo o código abaixo:

<nav class="navbar navbar-expand-lg bg-body-tertiary">

  <div class="container-fluid">

    <a class="navbar-brand" href="#">Barra</a>

    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">

      <span class="navbar-toggler-icon"></span>

    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">

      <ul class="navbar-nav me-auto mb-2 mb-lg-0">

        <li class="nav-item">

          <a class="nav-link active" aria-current="page" href="#">Home</a>

        </li>

        <li class="nav-item">

          <a class="nav-link" href="produtos.php">Produtos</a>

        </li>

      </ul>

    </div>

  </div>

</nav>

Adicione um item de menu chamado "carrinho" na página menu.php.

Altere a página menu.php para deixar ativa a página de acordo com a variável $pg_atual definida em atual.php.

1.14. Envio dos exercícios

https://forms.gle/3gn2TtLXGjz4hiPK8





Faça apenas os exercicios daqui pra baixo, sem algo muito detalhado, algo que funcione já basta. Use apenas o que está aqui, não saia do padrão





Table of Contents

1. Informações sobre variáveis

1.1. Praticando

2. Variável declarada

2.1. Praticando

3. Funções

3.1. Sintaxe básica:

3.2. function:

3.3. nome:

3.4. parâmetros:

3.5. bloco de código:

3.6. return:

3.7. Exercício

4. Argumentos de funções

4.1. Inserindo Bootstrap

4.2. Exercício

4.3. Passando vetores

4.4. Exercício

4.5. Referência

4.6. Exercício

4.7. Valor padrão

5. Variáveis de Sessão

5.1. Como funciona:

5.1.1. Guardando dados

5.1.2. Mostrando o dado salvo

5.1.3. Encerrando a sessão

5.2. Exercício

6. header()

6.1. Exercício

6.2. Envio dos exercícios

1. Informações sobre variáveis

A função var_dump() fornece informações sobre uma variável como tipo e valor.



<?php

var_dump($_GET['x']);

?>

1.1. Praticando

A. Crie uma página que recebe uma cor de um <input type='color'> e mostre o tipo e o valor recebido em $_GET.



B. Pesquise aqui qual o tipo de input pode ser usado para receber uma data sem hora.



C. Crie uma página que recebe a data de aniversário e mostre o tipo e o valor recebido.



2. Variável declarada

A função isset() verifica se uma variável foi declarada e é diferente de null.



if(isset($_POST['nome'])) {

    // O campo "nome" foi preenchido

    $nome = $_POST['nome'];

    echo "Olá, $nome!";

} else {

    echo "O campo nome não foi preenchido.";

}

2.1. Praticando

D. Crie uma página que recebe a preferência do usuário, são duas opções somente "escuro" ou "claro" usando <input type="radio">. A página que recebe a preferência deve usar cor de fundo preta e fonte branca se a seleção for escuro e o contrário se o selecionado for claro. Sugestão de leitura.



3. Funções

3.1. Sintaxe básica:

Uma função em PHP é escrita assim:



function nome_da_funcao(parâmetros) {

    // Código a ser executado dentro da função

    return valor_a_ser_retornado;

}

Exemplo:



function somar($numero1, $numero2) {

    $soma = $numero1 + $numero2;

    return $soma;

}

3.2. function:

palavra-chave para definir função.



3.3. nome:

não começa com $!



3.4. parâmetros:

lista de variáveis, é opcional!



3.5. bloco de código:

início: {

fim: }

3.6. return:

Opcional!



padrão: return null;

3.7. Exercício

Crie a função calcularJurosSimples() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.

Crie a função calculaJurosCompostos() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.

4. Argumentos de funções

Lista de argumentos



<?php

function soma($primeiro, $segundo,) // vírgula permitida em PHP 8

{

    echo "$primeiro + $segundo = ", $primeiro + $segundo;

}

?>

Exemplo de uso:



// Chamando a função com os valores 5 e 3

soma(5, 3);



echo soma(5,3);



$resultado = soma(5,3);

echo $resultado;



4.1. Inserindo Bootstrap



4.2. Exercício

Copie o projeto https://github.com/maurojh/PHP_2024_Aula3

Crie a aba Subtração que recebe dois números e mostra o resultado da subtração dos dois, utilize uma função.

4.3. Passando vetores

<?php

function soma($vetor)

{

    echo "$vetor[0] + $vetor[1] = ", $vetor[0]+$vetor[1];

}

?>

Chamada:



<?php

 soma([4,7]);

?>

4.4. Exercício

No projeto, adicione a aba Multiplicação que recebe 3 números e mostra o resultado da multiplicação deles, exemplo 2 * 3 * 5 = 30. Armazene os números em um vetor, crie a função que recebe o vetor e retorna o resultado.

4.5. Referência

Podemos modificar o argumento original recebendo uma referência, para isso adicione "e comercial" & ao nome do argumento.



<?php

function imprimeAumenta3(&valor) {

  echo $valor;

  $valor += 3;

}



$x = 2;

imprimeAumenta3($x);

echo $x;

?>

4.6. Exercício

Ainda no mesmo projeto, adicione a aba divisão que recebe 2 números e mostra o resultado da divisão deles, exemplo 8 / 2 = 4. Armazene os números em variáveis $x e $y, crie a função que recebe os dois valores, $x deve ser recebido por referência, faça o cálculo e armazene em $x. Use $x na impressão do resultado.

4.7. Valor padrão

Podemos ajustar um valor para o parâmetro se o usuário não enviar um argumento na chamada:



function preparar($tipo = "cappuccino")

{

  return "Café $tipo";

}



echo preparar();

echo preparar("espresso");

echo preparar(null);

?>

5. Variáveis de Sessão

A superglobal $_SESSION em PHP mantém dados do usuário entre diferentes páginas de um site.



5.1. Como funciona:

Execute session_start() em todas as páginas que usam $_SESSION e o PHP cuida dos ajustes da variável.



5.1.1. Guardando dados

<?php

session_start();



$_SESSION['nome'] = 'Fulano';

?>

5.1.2. Mostrando o dado salvo

<?php

session_start();



echo $_SESSION['nome'];

?>

5.1.3. Encerrando a sessão

<?php

session_start(); // Inicia a sessão para que possamos destruí-la



$_SESSION = array();



// Destrói os dados da sessão no servidor

session_destroy();



// Apaga o cookie da sessão (opcional, mas recomendado)

if (isset($_COOKIE[session_name()])) {

    setcookie(session_name(), '', time() - 42000, '/');

}



?>

5.2. Exercício

Crie uma página que recebe o nome de um usuário chamada primeira.php

Crie uma página que salva o nome recebido em $_SESSION['nome'].

Crie uma página que mostra o nome salvo em $_SESSION.

Crie uma página que encerra a sessão.

Coloque uma barra de navegação Bootstrap nas páginas criadas.

Ajuste cada página para mostrar um link para primeira.php se o usuário ainda não entrou, e o nome do usuário caso já exista um valor em $_SESSION['nome'].

6. header()

Podemos redirecionar o usuário à outra página usando a função header().



header('Location: entrada.php');

6.1. Exercício

Ajuste a página que encerra a sessão para enviar o usuário à página primeira.php após a destruição da sessão.

6.2. Envio dos exercícios

https://forms.gle/8f9cw1cWfW5mkTQ38



1.1. Praticando
A. Crie uma página que recebe uma cor de um <input type='color'> e mostre o tipo e o valor recebido em $_GET.

Crie um arquivo HTML com o formulário (form_cor.html):

HTML

<!DOCTYPE html>
<html>
<body>

<form action="processa_cor.php" method="get">
  <label for="cor">Escolha uma cor:</label>
  <input type="color" id="cor" name="cor">
  <input type="submit" value="Enviar">
</form>

</body>
</html>
E o arquivo PHP (processa_cor.php):

PHP

<?php
var_dump($_GET['cor']);
?>
B. Pesquise aqui qual o tipo de input pode ser usado para receber uma data sem hora.

O tipo de input é date.

C. Crie uma página que recebe a data de aniversário e mostre o tipo e o valor recebido.

Crie um arquivo HTML com o formulário (form_data.html):

HTML

<!DOCTYPE html>
<html>
<body>

<form action="processa_data.php" method="get">
  <label for="data_nasc">Data de Aniversário:</label>
  <input type="date" id="data_nasc" name="data_nasc">
  <input type="submit" value="Enviar">
</form>

</body>
</html>
E o arquivo PHP (processa_data.php):

PHP

<?php
var_dump($_GET['data_nasc']);
?>
2.1. Praticando
D. Crie uma página que recebe a preferência do usuário, são duas opções somente "escuro" ou "claro" usando <input type="radio">. A página que recebe a preferência deve usar cor de fundo preta e fonte branca se a seleção for escuro e o contrário se o selecionado for claro.

Crie o arquivo HTML (form_tema.html):

HTML

<!DOCTYPE html>
<html>
<body>

<form action="processa_tema.php" method="post">
  <input type="radio" id="claro" name="tema" value="claro" checked>
  <label for="claro">Claro</label><br>
  <input type="radio" id="escuro" name="tema" value="escuro">
  <label for="escuro">Escuro</label><br>
  <input type="submit" value="Salvar Preferência">
</form>

</body>
</html>
E o arquivo PHP (processa_tema.php):

PHP

<?php
if (isset($_POST['tema'])) {
    $tema = $_POST['tema'];

    if ($tema == 'escuro') {
        echo "<body style='background-color: black; color: white;'>";
        echo "<h1>Tema Escuro</h1>";
    } else {
        echo "<body style='background-color: white; color: black;'>";
        echo "<h1>Tema Claro</h1>";
    }
} else {
    echo "<h1>Nenhuma preferência selecionada.</h1>";
}
echo "</body>";
?>
3.7. Exercício
Crie a função calcularJurosSimples() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.
Crie a função calculaJurosCompostos() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.

PHP

<?php
function calcularJurosSimples($capital, $taxa, $tempo) {
    return $capital * $taxa * $tempo;
}

function calculaJurosCompostos($capital, $taxa, $tempo) {
    $montante = $capital * (1 + $taxa)**$tempo;
    return $montante - $capital;
}
?>
4.2. Exercício
Copie o projeto https://github.com/maurojh/PHP_2024_Aula3. Crie a aba Subtração que recebe dois números e mostra o resultado da subtração dos dois, utilize uma função.

No arquivo index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=subtracao">Subtração</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'subtracao') {
    include 'subtracao.php';
}

// ... código posterior ...
?>
Crie o arquivo subtracao.php:

PHP

<?php
function subtrair($num1, $num2) {
    return $num1 - $num2;
}
?>

<div class="container mt-4">
    <h2>Subtração</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="subtracao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2'])) {
        $resultado = subtrair($_GET['num1'], $_GET['num2']);
        echo "<h4 class='mt-4'>Resultado: " . $resultado . "</h4>";
    }
    ?>
</div>
4.4. Exercício
No projeto, adicione a aba Multiplicação que recebe 3 números e mostra o resultado da multiplicação deles, exemplo 2 * 3 * 5 = 30. Armazene os números em um vetor, crie a função que recebe o vetor e retorna o resultado.

No index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=multiplicacao">Multiplicação</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'multiplicacao') {
    include 'multiplicacao.php';
}

// ... código posterior ...
?>
Crie o arquivo multiplicacao.php:

PHP

<?php
function multiplicarVetor($vetor) {
    $resultado = 1;
    foreach ($vetor as $numero) {
        $resultado *= $numero;
    }
    return $resultado;
}
?>

<div class="container mt-4">
    <h2>Multiplicação</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="multiplicacao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <div class="mb-3">
            <label for="num3" class="form-label">Número 3</label>
            <input type="number" class="form-control" id="num3" name="num3">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2']) && isset($_GET['num3'])) {
        $numeros = [$_GET['num1'], $_GET['num2'], $_GET['num3']];
        $resultado = multiplicarVetor($numeros);
        echo "<h4 class='mt-4'>Resultado: " . implode(' * ', $numeros) . " = " . $resultado . "</h4>";
    }
    ?>
</div>
4.6. Exercício
Ainda no mesmo projeto, adicione a aba divisão que recebe 2 números e mostra o resultado da divisão deles, exemplo 8 / 2 = 4. Armazene os números em variáveis $x e $y, crie a função que recebe os dois valores, $x deve ser recebido por referência, faça o cálculo e armazene em $x. Use $x na impressão do resultado.

No index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=divisao">Divisão</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'divisao') {
    include 'divisao.php';
}

// ... código posterior ...
?>
Crie o arquivo divisao.php:

PHP

<?php
function dividir(&$x, $y) {
    if ($y != 0) {
        $x = $x / $y;
    } else {
        $x = "Divisão por zero não é permitida.";
    }
}
?>

<div class="container mt-4">
    <h2>Divisão</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="divisao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2'])) {
        $x = $_GET['num1'];
        $y = $_GET['num2'];
        dividir($x, $y);
        echo "<h4 class='mt-4'>Resultado: " . $_GET['num1'] . " / " . $_GET['num2'] . " = " . $x . "</h4>";
    }
    ?>
</div>
5.2. Exercício
Crie uma página que recebe o nome de um usuário chamada primeira.php.
Crie uma página que salva o nome recebido em $_SESSION['nome'].
Crie uma página que mostra o nome salvo em $_SESSION.
Crie uma página que encerra a sessão.
Coloque uma barra de navegação Bootstrap nas páginas criadas.
Ajuste cada página para mostrar um link para primeira.php se o usuário ainda não entrou, e o nome do usuário caso já exista um valor em $_SESSION['nome'].

Crie o arquivo navbar.php para o menu:

PHP

<?php
session_start();
?>
<nav class="navbar navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Barra</a>
    <div class="collapse navbar-collapse">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <?php if (isset($_SESSION['nome'])): ?>
          <li class="nav-item">
            <a class="nav-link">Olá, <?= $_SESSION['nome'] ?>!</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="mostrar.php">Ver Nome</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="logout.php">Sair</a>
          </li>
        <?php else: ?>
          <li class="nav-item">
            <a class="nav-link" href="primeira.php">Entrar</a>
          </li>
        <?php endif; ?>
      </ul>
    </div>
  </div>
</nav>
Crie o arquivo primeira.php:

PHP

<?php include 'navbar.php'; ?>
<!doctype html>
<html lang="en">
<head>
  </head>
<body>
  <div class="container mt-4">
    <?php if (!isset($_SESSION['nome'])): ?>
      <h2>Primeira Página</h2>
      <form action="salvar.php" method="post">
        <div class="mb-3">
          <label for="nome" class="form-label">Digite seu nome:</label>
          <input type="text" class="form-control" id="nome" name="nome">
        </div>
        <button type="submit" class="btn btn-primary">Salvar</button>
      </form>
    <?php endif; ?>
  </div>
</body>
</html>
Crie o arquivo salvar.php:

PHP

<?php
session_start();
if (isset($_POST['nome'])) {
    $_SESSION['nome'] = $_POST['nome'];
}
header('Location: mostrar.php');
?>
Crie o arquivo mostrar.php:

PHP

<?php include 'navbar.php'; ?>
<!doctype html>
<html lang="en">
<head>
  </head>
<body>
  <div class="container mt-4">
    <?php if (isset($_SESSION['nome'])): ?>
      <h2>Mostrar Nome</h2>
      <p>O nome salvo na sessão é: <strong><?= $_SESSION['nome'] ?></strong></p>
    <?php endif; ?>
  </div>
</body>
</html>
Crie o arquivo logout.php:

PHP

<?php
session_start();

$_SESSION = array();

session_destroy();

if (isset($_COOKIE[session_name()])) {
    setcookie(session_name(), '', time() - 42000, '/');
}

// O redirecionamento será ajustado no próximo exercício
// header('Location: primeira.php');
?>
6.1. Exercício
Ajuste a página que encerra a sessão para enviar o usuário à página primeira.php após a destruição da sessão.

Altere o arquivo logout.php da seguinte forma:

PHP

<?php
session_start();

$_SESSION = array();

session_destroy();

if (isset($_COOKIE[session_name()])) {
    setcookie(session_name(), '', time() - 42000, '/');
}

header('Location: primeira.php');
exit; // É uma boa prática usar exit após o header
?>

Só me mande os exercicios até o 4.6. Exercício

o resto pra baixo ignore


1.1. Praticando
A. Crie uma página que recebe uma cor de um <input type='color'> e mostre o tipo e o valor recebido em $_GET.

Crie um arquivo HTML com o formulário (form_cor.html):

HTML

<!DOCTYPE html>
<html>
<body>

<form action="processa_cor.php" method="get">
  <label for="cor">Escolha uma cor:</label>
  <input type="color" id="cor" name="cor">
  <input type="submit" value="Enviar">
</form>

</body>
</html>
E o arquivo PHP (processa_cor.php):

PHP

<?php
var_dump($_GET['cor']);
?>
B. Pesquise aqui qual o tipo de input pode ser usado para receber uma data sem hora.

O tipo de input é date.

C. Crie uma página que recebe a data de aniversário e mostre o tipo e o valor recebido.

Crie um arquivo HTML com o formulário (form_data.html):

HTML

<!DOCTYPE html>
<html>
<body>

<form action="processa_data.php" method="get">
  <label for="data_nasc">Data de Aniversário:</label>
  <input type="date" id="data_nasc" name="data_nasc">
  <input type="submit" value="Enviar">
</form>

</body>
</html>
E o arquivo PHP (processa_data.php):

PHP

<?php
var_dump($_GET['data_nasc']);
?>
2.1. Praticando
D. Crie uma página que recebe a preferência do usuário, são duas opções somente "escuro" ou "claro" usando <input type="radio">. A página que recebe a preferência deve usar cor de fundo preta e fonte branca se a seleção for escuro e o contrário se o selecionado for claro.

Crie o arquivo HTML (form_tema.html):

HTML

<!DOCTYPE html>
<html>
<body>

<form action="processa_tema.php" method="post">
  <input type="radio" id="claro" name="tema" value="claro" checked>
  <label for="claro">Claro</label><br>
  <input type="radio" id="escuro" name="tema" value="escuro">
  <label for="escuro">Escuro</label><br>
  <input type="submit" value="Salvar Preferência">
</form>

</body>
</html>
E o arquivo PHP (processa_tema.php):

PHP

<?php
if (isset($_POST['tema'])) {
    $tema = $_POST['tema'];

    if ($tema == 'escuro') {
        echo "<body style='background-color: black; color: white;'>";
        echo "<h1>Tema Escuro</h1>";
    } else {
        echo "<body style='background-color: white; color: black;'>";
        echo "<h1>Tema Claro</h1>";
    }
} else {
    echo "<h1>Nenhuma preferência selecionada.</h1>";
}
echo "</body>";
?>
3.7. Exercício
Crie a função calcularJurosSimples() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.
Crie a função calculaJurosCompostos() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.

PHP

<?php
function calcularJurosSimples($capital, $taxa, $tempo) {
    return $capital * $taxa * $tempo;
}

function calculaJurosCompostos($capital, $taxa, $tempo) {
    $montante = $capital * (1 + $taxa)**$tempo;
    return $montante - $capital;
}
?>
4.2. Exercício
Copie o projeto https://github.com/maurojh/PHP_2024_Aula3. Crie a aba Subtração que recebe dois números e mostra o resultado da subtração dos dois, utilize uma função.

No arquivo index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=subtracao">Subtração</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'subtracao') {
    include 'subtracao.php';
}

// ... código posterior ...
?>
Crie o arquivo subtracao.php:

PHP

<?php
function subtrair($num1, $num2) {
    return $num1 - $num2;
}
?>

<div class="container mt-4">
    <h2>Subtração</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="subtracao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2'])) {
        $resultado = subtrair($_GET['num1'], $_GET['num2']);
        echo "<h4 class='mt-4'>Resultado: " . $resultado . "</h4>";
    }
    ?>
</div>
4.4. Exercício
No projeto, adicione a aba Multiplicação que recebe 3 números e mostra o resultado da multiplicação deles, exemplo 2 * 3 * 5 = 30. Armazene os números em um vetor, crie a função que recebe o vetor e retorna o resultado.

No index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=multiplicacao">Multiplicação</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'multiplicacao') {
    include 'multiplicacao.php';
}

// ... código posterior ...
?>
Crie o arquivo multiplicacao.php:

PHP

<?php
function multiplicarVetor($vetor) {
    $resultado = 1;
    foreach ($vetor as $numero) {
        $resultado *= $numero;
    }
    return $resultado;
}
?>

<div class="container mt-4">
    <h2>Multiplicação</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="multiplicacao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <div class="mb-3">
            <label for="num3" class="form-label">Número 3</label>
            <input type="number" class="form-control" id="num3" name="num3">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2']) && isset($_GET['num3'])) {
        $numeros = [$_GET['num1'], $_GET['num2'], $_GET['num3']];
        $resultado = multiplicarVetor($numeros);
        echo "<h4 class='mt-4'>Resultado: " . implode(' * ', $numeros) . " = " . $resultado . "</h4>";
    }
    ?>
</div>
4.6. Exercício
Ainda no mesmo projeto, adicione a aba divisão que recebe 2 números e mostra o resultado da divisão deles, exemplo 8 / 2 = 4. Armazene os números em variáveis $x e $y, crie a função que recebe os dois valores, $x deve ser recebido por referência, faça o cálculo e armazene em $x. Use $x na impressão do resultado.

No index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=divisao">Divisão</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'divisao') {
    include 'divisao.php';
}

// ... código posterior ...
?>
Crie o arquivo divisao.php:

PHP

<?php
function dividir(&$x, $y) {
    if ($y != 0) {
        $x = $x / $y;
    } else {
        $x = "Divisão por zero não é permitida.";
    }
}
?>

<div class="container mt-4">
    <h2>Divisão</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="divisao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2'])) {
        $x = $_GET['num1'];
        $y = $_GET['num2'];
        dividir($x, $y);
        echo "<h4 class='mt-4'>Resultado: " . $_GET['num1'] . " / " . $_GET['num2'] . " = " . $x . "</h4>";
    }
    ?>
</div>

Não envie os "praticando"


3.7. Exercício
Crie a função calcularJurosSimples() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.
Crie a função calculaJurosCompostos() que recebe capital, taxa de juros e tempo e retorna o juros a ser pago.

PHP

<?php
function calcularJurosSimples($capital, $taxa, $tempo) {
    return $capital * $taxa * $tempo;
}

function calculaJurosCompostos($capital, $taxa, $tempo) {
    $montante = $capital * (1 + $taxa)**$tempo;
    return $montante - $capital;
}
?>
4.2. Exercício
Copie o projeto https://github.com/maurojh/PHP_2024_Aula3. Crie a aba Subtração que recebe dois números e mostra o resultado da subtração dos dois, utilize uma função.

No arquivo index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=subtracao">Subtração</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'subtracao') {
    include 'subtracao.php';
}

// ... código posterior ...
?>
Crie o arquivo subtracao.php:

PHP

<?php
function subtrair($num1, $num2) {
    return $num1 - $num2;
}
?>

<div class="container mt-4">
    <h2>Subtração</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="subtracao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2'])) {
        $resultado = subtrair($_GET['num1'], $_GET['num2']);
        echo "<h4 class='mt-4'>Resultado: " . $resultado . "</h4>";
    }
    ?>
</div>
4.4. Exercício
No projeto, adicione a aba Multiplicação que recebe 3 números e mostra o resultado da multiplicação deles, exemplo 2 * 3 * 5 = 30. Armazene os números em um vetor, crie a função que recebe o vetor e retorna o resultado.

No index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=multiplicacao">Multiplicação</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'multiplicacao') {
    include 'multiplicacao.php';
}

// ... código posterior ...
?>
Crie o arquivo multiplicacao.php:

PHP

<?php
function multiplicarVetor($vetor) {
    $resultado = 1;
    foreach ($vetor as $numero) {
        $resultado *= $numero;
    }
    return $resultado;
}
?>

<div class="container mt-4">
    <h2>Multiplicação</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="multiplicacao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <div class="mb-3">
            <label for="num3" class="form-label">Número 3</label>
            <input type="number" class="form-control" id="num3" name="num3">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2']) && isset($_GET['num3'])) {
        $numeros = [$_GET['num1'], $_GET['num2'], $_GET['num3']];
        $resultado = multiplicarVetor($numeros);
        echo "<h4 class='mt-4'>Resultado: " . implode(' * ', $numeros) . " = " . $resultado . "</h4>";
    }
    ?>
</div>
4.6. Exercício
Ainda no mesmo projeto, adicione a aba divisão que recebe 2 números e mostra o resultado da divisão deles, exemplo 8 / 2 = 4. Armazene os números em variáveis $x e $y, crie a função que recebe os dois valores, $x deve ser recebido por referência, faça o cálculo e armazene em $x. Use $x na impressão do resultado.

No index.php, adicione o link na barra de navegação:

HTML

<li class="nav-item">
  <a class="nav-link" href="?p=divisao">Divisão</a>
</li>
No mesmo arquivo, adicione a lógica para a nova página:

PHP

<?php
// ... código anterior ...

if ($p == 'divisao') {
    include 'divisao.php';
}

// ... código posterior ...
?>
Crie o arquivo divisao.php:

PHP

<?php
function dividir(&$x, $y) {
    if ($y != 0) {
        $x = $x / $y;
    } else {
        $x = "Divisão por zero não é permitida.";
    }
}
?>

<div class="container mt-4">
    <h2>Divisão</h2>
    <form action="" method="get">
        <input type="hidden" name="p" value="divisao">
        <div class="mb-3">
            <label for="num1" class="form-label">Número 1</label>
            <input type="number" class="form-control" id="num1" name="num1">
        </div>
        <div class="mb-3">
            <label for="num2" class="form-label">Número 2</label>
            <input type="number" class="form-control" id="num2" name="num2">
        </div>
        <button type="submit" class="btn btn-primary">Calcular</button>
    </form>

    <?php
    if (isset($_GET['num1']) && isset($_GET['num2'])) {
        $x = $_GET['num1'];
        $y = $_GET['num2'];
        dividir($x, $y);
        echo "<h4 class='mt-4'>Resultado: " . $_GET['num1'] . " / " . $_GET['num2'] . " = " . $x . "</h4>";
    }
    ?>
</div>


pro ex 4.2 segue os arquivos



navbar.php

<nav class="navbar navbar-expand-sm bg-body-tertiary">

  <div class="container-fluid">

    <a class="navbar-brand" href="#">Matemática</a>

    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">

      <span class="navbar-toggler-icon"></span>

    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">

      <ul class="navbar-nav me-auto mb-2 mb-lg-0">

        <li class="nav-item">

        <?php if($pg_atual == 'home'): ?>

          <a class="nav-link active" aria-current="page" href="#">Home</a>

        <?php else: ?>

          <a class="nav-link" href="#">Home</a>

        <?php endif; ?>

        </li>

        <li class="nav-item">

        <?php if($pg_atual == 'soma'): ?>

          <a class="nav-link active" aria-current="page" href="#">Soma</a>

        <?php else: ?>

          <a class="nav-link" href="recebe_numeros_soma.php">Soma</a>

        <?php endif; ?>

          

        </li>

        <li class="nav-item">

        <?php if($pg_atual == 'resultado'): ?>

          <a class="nav-link active" aria-current="page" href="#">Resultado</a>

        <?php else: ?>

          <a class="nav-link" href="#">Resultado</a>

        <?php endif; ?>

          

        </li>

      </ul>

    </div>

  </div>

</nav>















recebeNumeroSoma.php





<!DOCTYPE html>

<html>

<head>

    <title>Calculadora Simples</title>

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

</head>

<body>

<?php

$pg_atual = 'soma';



include 'navbar.php';

?>

    <div class='container-fluid'>

        <h1>Calculadora de Soma</h1>

        <form action="soma.php">

            <label for="num1" class="form-label">Número 1:</label>

            <!-- $_GET['num1'] -->

            <input type="number" id="num1" name="num1" class="form-control"><br>



            <label for="num2" class="form-label">Número 2:</label>

            <!-- $_GET['num2'] -->

            <input type="number" id="num2" name="num2" class="form-control"><br>

            <input type="submit" value="Calcular" class="btn btn-primary">

        </form>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</body>

</html>







soma.php



<!DOCTYPE html>

<html>

<head>

    <title>Calculadora Simples</title>

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

</head>

<body>

<?php

$pg_atual = 'resultado';



include 'navbar.php';

?>

    <div class='container-fluid'>

        <h1>Resultado:</h1>

<?php



$n1 = $_GET['num1'];

$n2 = $_GET['num2'];



function soma($primeiro, $segundo,) // vírgula permitida em PHP 8

{

    echo "$primeiro + $segundo = ", $primeiro + $segundo;

}



$resultado = soma($n1, $n2);

echo $resultado;

?>  

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</body>

</html>



Analisando os arquivos que você forneceu, é necessário fazer algumas alterações para implementar a funcionalidade de subtração corretamente.

O problema principal está no arquivo soma.php, onde a função soma não tem um valor de retorno. A função echo imprime diretamente no navegador, mas a função soma em si retorna null. Portanto, quando você tenta fazer echo $resultado;, o resultado é vazio.

Além disso, a estrutura de links no navbar.php e a lógica de inclusão nos arquivos não estão alinhadas com o exercício.

Solução para o Exercício 4.2
Para resolver o problema e adicionar a aba de subtração, você precisará modificar o navbar.php e criar novos arquivos para a funcionalidade de subtração, seguindo a mesma lógica da soma.

1. navbar.php
Adicione um novo item de menu para a subtração e ajuste os links para os novos arquivos que você irá criar:

PHP

<nav class="navbar navbar-expand-sm bg-body-tertiary">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Matemática</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <?php if($pg_atual == 'home'): ?>
          <a class="nav-link active" aria-current="page" href="#">Home</a>
          <?php else: ?>
          <a class="nav-link" href="#">Home</a>
          <?php endif; ?>
        </li>
        <li class="nav-item">
          <?php if($pg_atual == 'soma'): ?>
          <a class="nav-link active" aria-current="page" href="recebe_numeros_soma.php">Soma</a>
          <?php else: ?>
          <a class="nav-link" href="recebe_numeros_soma.php">Soma</a>
          <?php endif; ?>
        </li>
        <li class="nav-item">
          <?php if($pg_atual == 'subtracao'): ?>
          <a class="nav-link active" aria-current="page" href="recebe_numeros_subtracao.php">Subtração</a>
          <?php else: ?>
          <a class="nav-link" href="recebe_numeros_subtracao.php">Subtração</a>
          <?php endif; ?>
        </li>
        <li class="nav-item">
          <?php if($pg_atual == 'resultado'): ?>
          <a class="nav-link active" aria-current="page" href="#">Resultado</a>
          <?php else: ?>
          <a class="nav-link" href="#">Resultado</a>
          <?php endif; ?>
        </li>
      </ul>
    </div>
  </div>
</nav>
2. recebe_numeros_subtracao.php
Crie este novo arquivo. Ele será o formulário para a subtração, análogo ao recebeNumeroSoma.php.

PHP

<!DOCTYPE html>
<html>
<head>
    <title>Calculadora Simples</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
<?php
$pg_atual = 'subtracao';
include 'navbar.php';
?>
    <div class='container-fluid'>
        <h1>Calculadora de Subtração</h1>
        <form action="subtracao.php">
            <label for="num1" class="form-label">Número 1:</label>
            <input type="number" id="num1" name="num1" class="form-control"><br>

            <label for="num2" class="form-label">Número 2:</label>
            <input type="number" id="num2" name="num2" class="form-control"><br>
            <input type="submit" value="Calcular" class="btn btn-primary">
        </form>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
3. subtracao.php
Crie este arquivo para processar a subtração. A função subtrair precisa retornar o valor, em vez de imprimi-lo diretamente.

PHP

<!DOCTYPE html>
<html>
<head>
    <title>Calculadora Simples</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
<?php
$pg_atual = 'resultado';
include 'navbar.php';

function subtrair($primeiro, $segundo) {
    return $primeiro - $segundo;
}

$n1 = isset($_GET['num1']) ? $_GET['num1'] : 0;
$n2 = isset($_GET['num2']) ? $_GET['num2'] : 0;

$resultado = subtrair($n1, $n2);
?>
    <div class='container-fluid'>
        <h1>Resultado da Subtração:</h1>
        <p><?= $n1 . " - " . $n2 . " = " . $resultado ?></p>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
4. Ajuste em soma.php
Para que seu código funcione corretamente, você também deve ajustar o arquivo soma.php para que a função soma retorne um valor, em vez de imprimi-lo.

PHP

<!DOCTYPE html>
<html>
<head>
    <title>Calculadora Simples</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
<?php
$pg_atual = 'resultado';
include 'navbar.php';

$n1 = isset($_GET['num1']) ? $_GET['num1'] : 0;
$n2 = isset($_GET['num2']) ? $_GET['num2'] : 0;

function soma($primeiro, $segundo) {
    return $primeiro + $segundo;
}

$resultado = soma($n1, $n2);
?>
    <div class='container-fluid'>
        <h1>Resultado da Soma:</h1>
        <p><?= $n1 . " + " . $n2 . " = " . $resultado ?></p>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>